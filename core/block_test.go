package core

import (
	"../common"
	"math/big"
	"strings"
	"testing"
)

func TestHash(t *testing.T) {
	var h Header
	h.ParentHash = common.HexToHash("0x0a7dc2333a3040eac9f35e6498bf23726f02a8dbbe51b59cea236a2af71b98f5")
	h.UncleHash = common.HexToHash("0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347")
	h.Coinbase = common.HexToAddress("0x0000000000000000000000000000000000000000")
	h.Root = common.HexToHash("0x8c65d31f95418444a53f24ff2373a5c8d79b67c896ef6a489bef5c7639082b4a")
	h.TxHash = common.HexToHash("0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421")
	h.ReceiptHash = common.HexToHash("0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421")
	h.Bloom = common.BytesToBloom(common.FromHex(("0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")))
	h.Difficulty = big.NewInt(2)
	h.Number = big.NewInt(2052)
	h.GasLimit = 4712388
	h.Time = big.NewInt(1515687682)
	h.Extra = common.FromHex("0xd883010800846765746887676f312e392e328664617277696e000000000000005769ea25f909918cea0b57ede42a649dc01d1c4dca77dca4def2c6615d8c74015872b6f206ac4be5afc4038c8ce1baf8a9efa493afa9366f6660748dd750cdd000")
	h.MixDigest = common.HexToHash("0x0000000000000000000000000000000000000000000000000000000000000000")
	h.Nonce = common.EncodeNonce(0)
	if strings.Compare(h.Hash().String(), common.HexToHash("0x4cc5d1605833a134c289b7c32341e0aa362f5330a1ab98f3b16b3e4bcd34fa86").String()) != 0 {
		t.Fatalf("Block header hash mismatch: want: %x have: %x", common.HexToHash("0x4cc5d1605833a134c289b7c32341e0aa362f5330a1ab98f3b16b3e4bcd34fa86"), h.Hash())
	}
}
